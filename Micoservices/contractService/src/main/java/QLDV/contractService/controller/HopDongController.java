package QLDV.contractService.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.reactive.function.client.WebClient;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


import QLDV.contractService.model.HopDong;
import QLDV.contractService.repository.HopDongRepository;
import jakarta.transaction.Transactional;
import lombok.Data;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Date;
import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/api/hopdong")
public class HopDongController {
    private final WebClient.Builder webClientBuilder;
    private static final Logger logger = LoggerFactory.getLogger(HopDongController.class);


    @Autowired
    public HopDongController(WebClient.Builder webClientBuilder) {
        this.webClientBuilder = webClientBuilder;
    }
    
    @Autowired
    private HopDongRepository hopDongRepository;

    // L·∫•y t·∫•t c·∫£ h·ª£p ƒë·ªìng
    @GetMapping
    public ResponseEntity<?> getAllHopDong() {
        return ResponseEntity.ok(hopDongRepository.findAll());
    }

    // L·∫•y h·ª£p ƒë·ªìng theo m√£ h·ª£p ƒë·ªìng
    @GetMapping("/{maHopDong}")
    public ResponseEntity<?> getHopDongById(@PathVariable String maHopDong) {
        Optional<HopDong> hopDong = hopDongRepository.findById(maHopDong);
        if (hopDong.isPresent()) {
            return ResponseEntity.ok(hopDong.get());
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("H·ª£p ƒë·ªìng kh√¥ng t·ªìn t·∫°i");
        }
    }

    // L·∫•y h·ª£p ƒë·ªìng theo m√£ c∆∞ d√¢n
    @GetMapping("/byCuDan/{maCuDan}")
    public ResponseEntity<?> getHopDongByCuDan(@PathVariable int maCuDan) {
        List<HopDong> hopDongs = hopDongRepository.findByMaCuDan(maCuDan);
        if (!hopDongs.isEmpty()) {
            return ResponseEntity.ok(hopDongs);
        } else {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Kh√¥ng t√¨m th·∫•y h·ª£p ƒë·ªìng cho c∆∞ d√¢n c√≥ m√£: " + maCuDan);
        }
    }

    // Th√™m h·ª£p ƒë·ªìng m·ªõi
    @PostMapping
    public ResponseEntity<?> addHopDong(@RequestBody HopDong hopDong) {
        // Ki·ªÉm tra c√°c tr∆∞·ªùng b·∫Øt bu·ªôc
        if (hopDong.getMaCanHo() == null || hopDong.getMaCanHo().isBlank()) {
            return ResponseEntity.badRequest().body("M√£ cƒÉn h·ªô kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }
        if (hopDong.getNgayKy() == null) {
            return ResponseEntity.badRequest().body("Ng√†y k√Ω kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }
        if (hopDong.getMauHopDongId() == null) {
            return ResponseEntity.badRequest().body("Vui l√≤ng ch·ªçn m·∫´u h·ª£p ƒë·ªìng");
        }

        // T·∫°o m√£ h·ª£p ƒë·ªìng m·ªõi theo m·∫´u HDxxxxx (xxxx l√† s·ªë t·ª± ƒë·ªông tƒÉng)
        String newMaHopDong = generateNewMaHopDong();
        hopDong.setMaHopDong(newMaHopDong);

        // L∆∞u h·ª£p ƒë·ªìng m·ªõi
        hopDong.setTrangThai(HopDong.TrangThaiHopDong.Ch·ªù_duy·ªát); // M·∫∑c ƒë·ªãnh h·ª£p ƒë·ªìng c√≥ tr·∫°ng th√°i "Hi·ªáu l·ª±c"
        HopDong savedHopDong = hopDongRepository.save(hopDong);
        
        return ResponseEntity.ok(savedHopDong);
    }

    // C·∫≠p nh·∫≠t h·ª£p ƒë·ªìng
    @PutMapping("/{maHopDong}")
    public ResponseEntity<?> updateHopDong(@PathVariable String maHopDong, @RequestBody HopDong updatedHopDong) {
        Optional<HopDong> existingHopDongOpt = hopDongRepository.findById(maHopDong);
        if (!existingHopDongOpt.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("H·ª£p ƒë·ªìng kh√¥ng t·ªìn t·∫°i");
        }

        HopDong existingHopDong = existingHopDongOpt.get();
        System.out.println(existingHopDong.getMaHopDong());
        System.out.println(updatedHopDong.getMaHopDong());

        // Ki·ªÉm tra m√£ h·ª£p ƒë·ªìng kh√¥ng ƒë∆∞·ª£c ph√©p thay ƒë·ªïi
        if (!existingHopDong.getMaHopDong().equals(updatedHopDong.getMaHopDong())) {
            return ResponseEntity.badRequest().body("M√£ h·ª£p ƒë·ªìng kh√¥ng ƒë∆∞·ª£c s·ª≠a");
        }

        // Ki·ªÉm tra d·ªØ li·ªáu
        if (updatedHopDong.getMaCanHo() == null || updatedHopDong.getMaCanHo().isEmpty()) {
            return ResponseEntity.badRequest().body("M√£ cƒÉn h·ªô kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }
        if (updatedHopDong.getNgayKy() == null || updatedHopDong.getTrangThai() == null) {
            return ResponseEntity.badRequest().body("Ng√†y k√Ω v√† tr·∫°ng th√°i h·ª£p ƒë·ªìng kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }

        // C·∫≠p nh·∫≠t th√¥ng tin h·ª£p ƒë·ªìng
        existingHopDong.setMaCanHo(updatedHopDong.getMaCanHo());
        existingHopDong.setMauHopDongId(updatedHopDong.getMauHopDongId());
        existingHopDong.setNgayKy(updatedHopDong.getNgayKy());
        existingHopDong.setTrangThai(updatedHopDong.getTrangThai());
        if (updatedHopDong.getNgayKetThuc() != null) {
            existingHopDong.setNgayKetThuc(updatedHopDong.getNgayKetThuc());
        }

        hopDongRepository.save(existingHopDong);
        return ResponseEntity.ok(existingHopDong);
    }

    // X√≥a h·ª£p ƒë·ªìng
    @DeleteMapping("/{maHopDong}")
    public ResponseEntity<?> deleteHopDong(@PathVariable String maHopDong) {
        Optional<HopDong> hopDongOpt = hopDongRepository.findById(maHopDong);

        if (!hopDongOpt.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("H·ª£p ƒë·ªìng kh√¥ng t·ªìn t·∫°i");
        }

        HopDong hopDong = hopDongOpt.get();

        // Ki·ªÉm tra n·∫øu h·ª£p ƒë·ªìng c√≤n th·ªùi h·∫°n th√¨ kh√¥ng ƒë∆∞·ª£c x√≥a
        if (hopDong.getTrangThai() == HopDong.TrangThaiHopDong.Hi·ªáu_l·ª±c && hopDong.getNgayKetThuc().isAfter(java.time.LocalDate.now())) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Kh√¥ng th·ªÉ x√≥a h·ª£p ƒë·ªìng khi c√≤n th·ªùi h·∫°n.");
        }

        hopDongRepository.delete(hopDong);
        return ResponseEntity.ok("H·ª£p ƒë·ªìng ƒë√£ ƒë∆∞·ª£c x√≥a.");
    }
    // API duy·ªát h·ª£p ƒë·ªìng v·ªõi JSON trong body
    @PutMapping("/duyet/{maHopDong}")
    public ResponseEntity<?> duyetHopDong(@PathVariable String maHopDong, @RequestBody DuyetHopDongRequest request) {
        Optional<HopDong> hopDongOpt = hopDongRepository.findById(maHopDong);

        if (!hopDongOpt.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("H·ª£p ƒë·ªìng kh√¥ng t·ªìn t·∫°i");
        }

        HopDong hopDong = hopDongOpt.get();

        // Ki·ªÉm tra h·ª£p ƒë·ªìng ph·∫£i c√≥ tr·∫°ng th√°i "Ch·ªù duy·ªát"
        if (!hopDong.getTrangThai().equals(HopDong.TrangThaiHopDong.Ch·ªù_duy·ªát)) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Ch·ªâ h·ª£p ƒë·ªìng c√≥ tr·∫°ng th√°i 'Ch·ªù duy·ªát' m·ªõi c√≥ th·ªÉ duy·ªát");
        }

        // C·∫≠p nh·∫≠t th√¥ng tin khi duy·ªát
        hopDong.setMaNguoiKyBQL(request.getMaNguoiKyBQL());  // Ghi m√£ BQL
        hopDong.setMaCanHo(request.getMaCanHo());            // Ghi m√£ cƒÉn h·ªô
        hopDong.setTrangThai(HopDong.TrangThaiHopDong.Hi·ªáu_l·ª±c);  // Chuy·ªÉn tr·∫°ng th√°i th√†nh "Hi·ªáu l·ª±c"

        hopDongRepository.save(hopDong);

        return ResponseEntity.ok("H·ª£p ƒë·ªìng ƒë√£ ƒë∆∞·ª£c duy·ªát v√† chuy·ªÉn sang tr·∫°ng th√°i 'Hi·ªáu l·ª±c'");
    }
    
    // L·ªõp y√™u c·∫ßu JSON (Request body)
    public static class DuyetHopDongRequest {
        private int maNguoiKyBQL;
        private String maCanHo;

        // Getters and Setters
        public int getMaNguoiKyBQL() {
            return maNguoiKyBQL;
        }

        public void setMaNguoiKyBQL(int maNguoiKyBQL) {
            this.maNguoiKyBQL = maNguoiKyBQL;
        }

        public String getMaCanHo() {
            return maCanHo;
        }

        public void setMaCanHo(String maCanHo) {
            this.maCanHo = maCanHo;
        }
    }

    // Th√™m h·ª£p ƒë·ªìng v·ªõi ph·ª• l·ª•c d·ªãch v·ª•
    @Transactional
    @PostMapping("/add-full")
    public ResponseEntity<?> addHopDongWithPhuLuc(@RequestBody HopDongWithPhuLucDTO request) {
        logger.info("üîî Nh·∫≠n y√™u c·∫ßu t·∫°o h·ª£p ƒë·ªìng k√®m ph·ª• l·ª•c");

        HopDongCreateDTO hopDongDTO = request.getHopDong();
        List<PhuLucDichVuDTO> phuLucList = request.getPhuLucList();

        logger.debug("‚û°Ô∏è D·ªØ li·ªáu h·ª£p ƒë·ªìng: {}", hopDongDTO);
        logger.debug("‚û°Ô∏è S·ªë l∆∞·ª£ng ph·ª• l·ª•c: {}", phuLucList.size());

        // Validate HopDong
        if (hopDongDTO.getMaCanHo() == null || hopDongDTO.getMaCanHo().isBlank()) {
            logger.warn("‚ùå M√£ cƒÉn h·ªô b·ªã thi·∫øu");
            return ResponseEntity.badRequest().body("M√£ cƒÉn h·ªô kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }
        if (hopDongDTO.getNgayKy() == null) {
            logger.warn("‚ùå Ng√†y k√Ω b·ªã thi·∫øu");
            return ResponseEntity.badRequest().body("Ng√†y k√Ω kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng");
        }
        if (hopDongDTO.getMauHopDongId() == null) {
            logger.warn("‚ùå M·∫´u h·ª£p ƒë·ªìng b·ªã thi·∫øu");
            return ResponseEntity.badRequest().body("Vui l√≤ng ch·ªçn m·∫´u h·ª£p ƒë·ªìng");
        }

        // T·∫°o h·ª£p ƒë·ªìng m·ªõi
        String newMaHopDong = generateNewMaHopDong();
        logger.info("‚úÖ Sinh m√£ h·ª£p ƒë·ªìng m·ªõi: {}", newMaHopDong);

        HopDong hopDong = new HopDong();
        hopDong.setMaHopDong(newMaHopDong);
        hopDong.setMaCuDan(hopDongDTO.getMaCuDan());
        hopDong.setMaCanHo(hopDongDTO.getMaCanHo());
        hopDong.setMauHopDongId(hopDongDTO.getMauHopDongId());
        hopDong.setNgayKy(hopDongDTO.getNgayKy());
        hopDong.setNgayKetThuc(hopDongDTO.getNgayKetThuc());
        hopDong.setTrangThai(HopDong.TrangThaiHopDong.Ch·ªù_duy·ªát);

        HopDong savedHopDong = hopDongRepository.save(hopDong);
        logger.info("‚úÖ H·ª£p ƒë·ªìng ƒë√£ l∆∞u: {}", savedHopDong.getMaHopDong());

        // G·ª≠i t·ª´ng ph·ª• l·ª•c
        for (PhuLucDichVuDTO dto : phuLucList) {
            dto.setMaHopDong(newMaHopDong);
            logger.debug("üì¶ G·ª≠i ph·ª• l·ª•c: {}", dto);

            String response = webClientBuilder.build()
                .post()
                .uri("http://localhost:8080/api/phulucdichvu/create")
                .bodyValue(dto)
                .retrieve()
                .bodyToMono(String.class)
                .block();

            logger.info("‚úÖ Ph·∫£n h·ªìi t·ª´ addendumService: {}", response);
        }

        logger.info("üéâ Ho√†n t·∫•t t·∫°o h·ª£p ƒë·ªìng v√† ph·ª• l·ª•c");
        // T·∫°o response c√≥ th√™m message
        HopDongResponseDTO responseDTO = new HopDongResponseDTO(savedHopDong, "T·∫°o h·ª£p ƒë·ªìng th√†nh c√¥ng");

        return ResponseEntity.ok(responseDTO);

    }

    // H√†m sinh m√£ h·ª£p ƒë·ªìng t·ª± ƒë·ªông theo m·∫´u HDxxxxx
    private String generateNewMaHopDong() {
        int nextId = hopDongRepository.findAll().size() + 1; // ƒê·∫øm s·ªë l∆∞·ª£ng h·ª£p ƒë·ªìng hi·ªán c√≥ v√† c·ªông th√™m 1
        return "HD" + String.format("%05d", nextId); // T·∫°o m√£ h·ª£p ƒë·ªìng theo m·∫´u HDxxxxx
    }

    //DTO class
    public static class HopDongCreateDTO {
        private int maCuDan;
        private String maCanHo;
        private Integer mauHopDongId;
        private LocalDate ngayKy;
        private LocalDate ngayKetThuc;

        // Getters and Setters
        public int getMaCuDan() {
            return maCuDan;
        }
        public void setMaCuDan(int maCuDan) {
            this.maCuDan = maCuDan;
        }
        public String getMaCanHo() {
            return maCanHo;
        }
        public void setMaCanHo(String maCanHo) {
            this.maCanHo = maCanHo;
        }
        public Integer getMauHopDongId() {
            return mauHopDongId;
        }
        public void setMauHopDongId(Integer mauHopDongId) {
            this.mauHopDongId = mauHopDongId;
        }
        public LocalDate getNgayKy() {
            return ngayKy;
        }
        public void setNgayKy(LocalDate ngayKy) {
            this.ngayKy = ngayKy;
        }
        public LocalDate getNgayKetThuc() {
            return ngayKetThuc;
        }
        public void setNgayKetThuc(LocalDate ngayKetThuc) {
            this.ngayKetThuc = ngayKetThuc;
        }
        @Override
        public String toString() {
            return "HopDongCreateDTO{" +
                    "maCuDan=" + maCuDan +
                    ", maCanHo='" + maCanHo + '\'' +
                    ", mauHopDongId=" + mauHopDongId +
                    ", ngayKy=" + ngayKy +
                    ", ngayKetThuc=" + ngayKetThuc +
                    '}';
        }
    }

    // DTO class for creating PhuLucDichVu
    public static class PhuLucDichVuDTO {
        private String maHopDong;
        private String maDichVu;           // Thay v√¨ truy·ªÅn DichVu object
        private int cauHinhId;          // Thay v√¨ truy·ªÅn CauHinhDichVu object
        private int goiCuocId;          // Thay v√¨ truy·ªÅn GoiCuocDichVu object
        private BigDecimal donGiaCoDinh;
        private String trangThai;       // Enum d∆∞·ªõi d·∫°ng String
        private Date ngayBatDau;
        private Date ngayKetThuc;
        private String thongTinThem;

        // Getters and Setters
        public String getMaHopDong() {
            return maHopDong;
        }
        public void setMaHopDong(String maHopDong) {
            this.maHopDong = maHopDong;
        }
        public String getMaDichVu() {
            return maDichVu;
        }
        public void setMaDichVu(String maDichVu) {
            this.maDichVu = maDichVu;
        }
        public int getCauHinhId() {
            return cauHinhId;
        }
        public void setCauHinhId(int cauHinhId) {
            this.cauHinhId = cauHinhId;
        }
        public int getGoiCuocId() {
            return goiCuocId;
        }
        public void setGoiCuocId(int goiCuocId) {
            this.goiCuocId = goiCuocId;
        }
        public BigDecimal getDonGiaCoDinh() {
            return donGiaCoDinh;
        }
        public void setDonGiaCoDinh(BigDecimal donGiaCoDinh) {
            this.donGiaCoDinh = donGiaCoDinh;
        }
        public String getTrangThai() {
            return trangThai;
        }
        public void setTrangThai(String trangThai) {
            this.trangThai = trangThai;
        }
        public Date getNgayBatDau() {
            return ngayBatDau;
        }
        public void setNgayBatDau(Date ngayBatDau) {
            this.ngayBatDau = ngayBatDau;
        }
        public Date getNgayKetThuc() {
            return ngayKetThuc;
        }
        public void setNgayKetThuc(Date ngayKetThuc) {
            this.ngayKetThuc = ngayKetThuc;
        }
        public String getThongTinThem() {
            return thongTinThem;
        }
        public void setThongTinThem(String thongTinThem) {
            this.thongTinThem = thongTinThem;
        }
    }

    public static class HopDongWithPhuLucDTO {
        private HopDongCreateDTO hopDong;
        private List<PhuLucDichVuDTO> phuLucList; // ‚úÖ s·ª≠a t·ª´ 1 ‚Üí danh s√°ch

        // Getters and Setters
        public HopDongCreateDTO getHopDong() {
            return hopDong;
        }
        public void setHopDong(HopDongCreateDTO hopDong) {
            this.hopDong = hopDong;
        }
        public List<PhuLucDichVuDTO> getPhuLucList() {
            return phuLucList;
        }
        public void setPhuLucList(List<PhuLucDichVuDTO> phuLucList) {
            this.phuLucList = phuLucList;
        }
    }

    public static class HopDongResponseDTO {
    private HopDong hopDong;
    private String message;

    public HopDongResponseDTO(HopDong hopDong, String message) {
        this.hopDong = hopDong;
        this.message = message;
    }

    // Getters v√† setters
}
}